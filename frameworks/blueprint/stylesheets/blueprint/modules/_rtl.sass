@import grid.sass
@import compass/utilities/general/float.sass

// Main layout grid, override these constants to build your grid and container sizes.
!blueprint_grid_columns ||= 24
!blueprint_grid_width   ||= 30px
!blueprint_grid_margin  ||= 10px

!blueprint_grid_outer_width = !blueprint_grid_width + !blueprint_grid_margin
!blueprint_container_size = !blueprint_grid_outer_width * !blueprint_grid_columns - !blueprint_grid_margin

=blueprint-grid
  // A container should group all your columns
  .container
    +container
  // Use these classes (or mixins) to set the width of a column.
  @for !n from 1 to !blueprint_grid_columns + 1
    .span-#{!n}
      +span(!n)
    div
      &.span-#{!n}
        +column(!n, !n == !blueprint_grid_columns)
  // The last column in a row needs this class (or mixin) or it will end up on the next row.
  div.last
    +last
  // Add these to a column to append empty cols.
  @for !n from 1 to !blueprint_grid_columns
    .append-#{!n}
      +append(!n)
  // Add these to a column to prepend empty cols.
  @for !n from 1 to !blueprint_grid_columns
    .prepend-#{!n}
      +prepend(!n)
  // Use these classes on an element to push it into the
  // next column, or to pull it into the previous column.
  @for !n from 1 to !blueprint_grid_columns + 1
    .pull-#{!n}
      +pull(!n)
  @for !n from 1 to !blueprint_grid_columns + 1
    .push-#{!n}
      +push(!n)

// Columns
// Note: If you use this mixin without the class and want to support ie6
//       you must set text-align left on your container element in an IE stylesheet.
=container
  :width = !blueprint_container_size
  :margin 0 auto
  :direction rtl
  +clearfix

// The last column in a row needs this mixin or it will end up on the next row.
// TODO add this to span mixin when we have optional arguments
=last
  :margin-left 0

=span(!n)
  :width = !blueprint_grid_width * !n + (!blueprint_grid_margin * (!n - 1))

// Use this mixins to set the width of n columns.
=column(!n, !last = false)
  +float-right
  +span(!n)
  @if !last
    +last
  @else
    :margin-left = !blueprint_grid_margin
  * html &
    :overflow-x hidden

// Mixin to a column to append n empty cols.
=append(!n)
  :padding-left = (!blueprint_grid_outer_width) * !n

// Mixin to a column to prepend n empty cols.
=prepend(!n)
  :padding-right = (!blueprint_grid_outer_width) * !n

// mixin to a column to move it n columns to the left
=pull(!n, !last = false)
  :position relative
  @if !last
    :margin-right = (-!blueprint_grid_outer_width * !n) + !blueprint_grid_margin
  @else
    :margin-right = -!blueprint_grid_outer_width * !n

// mixin to a column to push it n columns to the right
=push(!n)
  +float-right
  :position relative
  :margin
    :top 0
    :left = -!blueprint_grid_outer_width * !n
    :bottom 1.5em
    :right = !blueprint_grid_outer_width * !n

// Border on left hand side of a column.
=border
  :padding-left = !blueprint_grid_margin / 2 - 1
  :margin-left = !blueprint_grid_margin / 2
  :border-left 1px solid #eee

// Border with more whitespace, spans one column.
=colborder
  :padding-left= !blueprint_grid_width - 0.5 * !blueprint_grid_margin - 1
  :margin-left= !blueprint_grid_width - 0.5 * !blueprint_grid_margin
  :border-left 1px solid #eee

=rtl-typography(!body_selector = "body")
  html #{!body_selector}
    :font-family Arial, sans-serif
    @if !body_selector != "body"
      +rtl-typography-defaults
  @if !body_selector == "body"
    body
      +rtl-typography-defaults

=rtl-typography-defaults
  h1, h2, h3, h4, h5, h6
    :font-family Arial, sans-serif

  pre, code, tt
    :font-family monospace

  p
    img.right
      +float-left
      :margin 1.5em 1.5em 1.5em 0
      :padding 0
    img.left
      +float-right
      :margin 1.5em 0 1.5em 1.5em
      :padding 0

  dd, ul, ol
    :margin-left 0
    :margin-right 1.5em

  td, th
    :text-align right
